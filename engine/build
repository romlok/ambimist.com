#!/bin/sh

# Builds the site in the current repository

set -e

ENGINE_PATH="$(dirname "$0")"
SITE_PATH="$(realpath "$ENGINE_PATH/..")"
SITE_ARTICLES_PATH="$SITE_PATH/articles"
SRC_PATH="$SITE_PATH/src"
PAGES_PATH="$SRC_PATH/pages"
ARTICLES_PATH="$SRC_PATH/articles"

# Check environment
PANDOC="$(which pandoc || echo -n)"

# Generate the various pages

RESERVED_NAMES="src|engine|README"
PAGE_TEMPLATE="$ENGINE_PATH/page.html"


ext_to_converter() {
	case "$1" in
		"html")
			echo -n 'cat'
			;;
			
		"md")
			if [ -z "$PANDOC" ]; then
				echo "ERROR: Pandoc must be installed to use markdown" >&2
				return 1
			fi
			
			echo -n "$PANDOC -f markdown -t html"
			;;
			
		*)
			echo "WARNING: Unknown file type $extension" >&2
			return 0
			;;
	esac
}


build_file() {
	input_file="$1"
	output_path="$2"
	file="$(basename "$input_file")"
	name="$(echo "$file" | cut -d"." -f1)"
	extension="$(echo "$file" | cut -d"." -f2)"
	
	if [ -n "$(echo "$name" | grep -xE "$RESERVED_NAMES")" ]; then
		return 0
	fi
	
	site_file="$name.html"
	output_file="$output_path/$site_file"
	
	rel_output_file="$(echo "$output_file" | sed "s|^$SITE_PATH/||")"
	echo "## Generating $rel_output_file"
	
	mkdir -p "$(dirname "$output_file")"
	converter="$(ext_to_converter "$extension")"
	if [ -n "$converter" ]; then
		cat "$input_file" \
			| $converter \
			| sed -e "/^<PAGE-CONTENT>$/ { r /dev/stdin" -e ';d};' "$PAGE_TEMPLATE" \
			> "$output_file"
	fi
}


echo "# Building pages"
for input_file in "$PAGES_PATH"/*; do
	build_file "$input_file" "$SITE_PATH"
done

echo "# Building articles"
for input_file in "$ARTICLES_PATH"/*; do
	build_file "$input_file" "$SITE_ARTICLES_PATH"
done


# TODO: The index page
